name: CI/CD - Dev Environment

on:
  push:
    branches:
      - dev
      - 'feature-*'

jobs:

  validate-feature-push:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature-')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate latest non-merge commit message
        run: |
          COMMIT_MSG=$(git log --no-merges -1 --pretty=%B)
          echo "$COMMIT_MSG" | grep -Eq '^(feat|fix|chore|docs|style|refactor|test|perf)(\(.+\))?: .+' || {
            echo "Invalid commit message."
            exit 1
          }

  build-and-push-dev:
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    runs-on: ubuntu-latest

    env:
      TAG_PREFIX: dev

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Bump version (patch)
        run: |
          OUTPUT=$(node scripts/version-bump.js patch)
          echo "$OUTPUT"
          VERSION=$(echo "$OUTPUT" | sed -nE 's/^Bumped .* â†’ ([0-9]+\.[0-9]+\.[0-9]+)$/\1/p')
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - name: Build and push backend1
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend1:dev-${{ env.VERSION }}

      - name: Build and push backend2
        uses: docker/build-push-action@v5
        with:
          context: ./backend2
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend2:dev-${{ env.VERSION }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/frontend:dev-${{ env.VERSION }}